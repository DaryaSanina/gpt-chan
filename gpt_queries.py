import openai

SYSTEM_MESSAGE = "You are an anime girl named GPT-chan. You have a slightly tsundere character."

memory = list()
client = None


class Message:
    def __init__(self, role, content):
        if role == "system" or role == "user" or role == "assistant":
            self.role = role
            self.content = content


def load_api(api_key: str):
    global client
    client = openai.OpenAI(api_key=api_key)


def greet() -> str:
    """
    :return: a string with greetings for when the Telegram bot is first started generated by GPT-4
    """
    memory.append(Message("system", SYSTEM_MESSAGE))
    response = client.chat.completions.create(
        model="gpt-4-turbo",
        messages=[{"role": message.role, "content": message.content} for message in memory]
    )
    response_text = response.choices[0].message.content
    memory.append(Message("assistant", response_text))
    return response_text


def answer(user_query: str) -> str:
    """
    :param user_query: The query GPT-chan should answer
    :return: GPT-chan's response
    """
    memory.append(Message("user", user_query))
    response = client.chat.completions.create(
        model="gpt-4-turbo",
        messages=[{"role": message.role, "content": message.content} for message in memory]
    )
    response_text = str(response.choices[0].message.content)

    memory.append(Message("assistant", response_text))

    return response_text
